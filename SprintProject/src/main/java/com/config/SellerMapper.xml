<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SellerMapper">





<select id="return" resultType="ReturnDTO" parameterType="String">
select DISTINCT 
	   o.oid,
	   t.gname,
       o.oproductname,
       o.oprice,
       o.oimage,
       o.oname,
       o.oaddress1,
       o.oconfirmed,
       t.confirmed
  from seller s
  join goods g
    on s.sid = g.sid
  join orderproductdetail t
    on g.gid= t.gid
  join orders o
    on o.opindex = t.opindex
 where s.sid=#{sid}
 order by o.oid 


</select>




 <update id="deliveryupdate" parameterType="OrderDTO">
			update orders 
			   set odelivery = #{odelivery}
			 where oid = #{oid}
</update> 





<select id="del" resultType="OrderDTO">
			select DISTINCT
				   p.oid,
				   p.mid, 
				   p.ordate, 
				   p.oproductname, 
				   p.oname,
				   p.ophone1,
				   p.ophone2, 
				   p.ophone3,
				   p.oaddress1,
				   p.oaddress2,
				   p.opindex,
				   p.oprice,
				   p.oimage,
				   p.opaymentcheck,
				   p.oconfirmed,
				   p.odelivery,
				   y.deliverystatus
			  from seller s
			  join goods g
			    on s.sid = g.sid
			  join orderproductdetail o
			    on g.gid = o.gid
			  join orders p
			    on o.opindex = p.opindex
	     left join orderdelivery y
				on p.odelivery=y.odelivery
			 where s.sid = #{sid}
			 order by p.oid
		            				
</select>




<insert id="insert" parameterType="SellerDTO">
	insert into seller( sid,spw,sname,saddress1,saddress2, semail1,semail2 ,spost , sphone1 ,
	sphone2 , sphone3 , sbirth ) values
	
( #{sid}, #{spw}, #{sname}, #{saddress1}, #{saddress2}, #{semail1},#{semail2} ,#{spost} , #{sphone1} ,
	#{sphone2} , #{sphone3} , null  )

</insert>
	
	
<select id="idCheck" resultType="int" parameterType="string">
	select count(*)
	from seller
	where sid = #{sid}

</select>	

<select id="login" resultType="SellerDTO" parameterType="map">
	select *
	from seller
	where sid = #{sid} and spw = #{spw}
</select>
	
<select id="Monthlysales" resultType="OrderDTO" parameterType="String">
select o.ordate, o.oprice from orders o 
	join orderproductdetail r on o.opindex = r.opindex
	join goods g on g.gid = r.gid 
		where g.sid = #{sid} 
</select>

<select id="TodaySalesQuantity" resultType="OrderProductDetailDTO" parameterType="String">
select o.ordate, r.gamount from orders o 
	join orderproductdetail r on o.opindex = r.opindex
	join goods g on g.gid = r.gid 
		where g.sid =#{sid}
</select>

<select id="TodaySaleMoney" resultType="CouponUserDTO" parameterType="String">
select o.gprice, r.code, c.usedtime from orderproductdetail o 
	join goods g on o.gid = g.gid 
	join orderproduct r on o.opindex = r.opindex
	join couponuser c on r.code = c.code 
		where g.sid = #{sid}

</select>

<select id="Recentorderstatus" resultType="OrderDTO" parameterType="String" >
select o.oname, o.oprice, d.deliverystatus, c.opaymentcheckstatus,o.ordate
 from orders o 
		join orderdelivery d on o.odelivery = d.odelivery 
        join orderpaymentcheck c on o.opaymentcheck = c.opaymentcheck 
        join goods r on r.gimage1 = o.oimage 
        join orderproductdetail  g on g.opindex = o.opindex
            where r.sid = #{sid} and o.opindex in 
            	(select opindex 
            	   from 
            	   	(select opindex , ROW_NUMBER() over (order by opindex desc) r from orders)
                      where r between 1 and 18) 
        order by o.opindex desc
</select>

<select id="TotalUserCount" resultType="int" parameterType="String">
select  count(DISTINCT o.mid) from orders o 
	join orderproductdetail d on o.opindex = d.opindex 
	join goods g on g.gid = d.gid 
		where g.sid = #{sid}
</select>


<select id="Rank" resultType="OrderDTO" parameterType="String">
			select  o.oname, sum(oprice) sum from orders o 
			  join orderproductdetail d 
			    on o.opindex = d.opindex 
			  join goods g 
			    on g.gid = d.gid 
			 where g.sid = #{sid} 
			   and o.oname in 
				    		 (select oname 
				    		    from 
									(select  oname ,
											 sum(oprice), 
											 ROW_NUMBER() 
											 over (order by sum(oprice) desc)
									 r from orders  
									  group by oname)
							   where r between 1 and 10)
			 group by o.oname 
			 order by 2 desc
</select>

<select id="Salesbycategory" resultType="GoodsDTO" parameterType="String"> 
select gcategory , sum(gsell) gsell from goods 
	where sid = #{sid} 
		group by gcategory 
			order by gcategory desc
</select>

<select id="monthlysales" resultType="OrderDTO" parameterType="String">
select EXTRACT (month from ordate) as ordate , sum(o.oprice) sum from orders o
	 join orderproductdetail r on o.opindex = r.opindex 
 	 join goods g on g.gid = r.gid 
     		where g.sid = #{sid} 
   		 		 group by EXTRACT (month from ordate) 
    				order by ordate asc
</select>

<select id="Outofstockproduct" resultType="int" parameterType="String">
select
  count(*)
 from stock s 
 join goods g on g.gid = s.gid 
where g.sid = #{sid} 
  and s.gstock<![CDATA[<]]> =5
</select>

<select id="totalinventory" resultType="int" parameterType="String">
select
    gstock
 from stock s 
 join goods g on g.gid = s.gid 
where g.sid = #{sid} 
  
</select>


</mapper>