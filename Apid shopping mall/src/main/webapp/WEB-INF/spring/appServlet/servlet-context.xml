<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
<mvc:annotation-driven></mvc:annotation-driven>

<mvc:view-controller path="/" view-name="main"/><!--  /요청   main.JSP  -->
<mvc:view-controller path="/loginForm" view-name="loginForm"/><!--  /요청   loginForm.JSP  -->
<mvc:view-controller path="/main" view-name="main"/><!--  /요청   main.JSP  -->
<mvc:view-controller path="/memberForm" view-name="memberForm"/><!--  /요청   memberForm.JSP  -->
<mvc:view-controller path="/passwdselect" view-name="passwdselect"/><!--  /요청   memberForm.JSP  -->
<mvc:view-controller path="/sellerpasswdselect" view-name="sellerpasswdselect"/><!--  /요청   memberForm.JSP  -->



<!-- 인터셉터 부분 -->
<bean id="loginCheckInterceptor" class="com.interceptor.LoginCheckInterceptor"></bean>

<mvc:interceptors>
	<mvc:interceptor>
		<mvc:mapping path="/loginCheck/**"/>	
		 <ref bean="loginCheckInterceptor"/>
	</mvc:interceptor>
</mvc:interceptors>



  <!-- websocket handler -->
    <bean id="websocketHandler" class="com.websocket.websocketHandler" />

    <websocket:handlers>
        <websocket:mapping handler="websocketHandler" path="/websocket" />
        <websocket:handshake-interceptors>
            <bean
                class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>

  <!--tetris websocket handler -->
    <bean id="tetrisSoketHandler" class="com.websocket.tetrisSoketHandler" />

    <websocket:handlers>
        <websocket:mapping handler="tetrisSoketHandler" path="/tetrisSocket" />
        <websocket:handshake-interceptors>
            <bean
                class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>

	



<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="52428800" />
    <property name="maxInMemorySize" value="1000000" />
    <property name="defaultEncoding" value="utf-8" />
</bean>

<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<property name="host" value="smtp.naver.com" />
	<property name="port" value="465" />
	<property name="username" value="qwrekpjh@naver.com" /> <!-- 보내는 사람의 메일아이디 -->
	<property name="password" value="bang044**" /> <!-- 보내는사람의 메일 비밀번호   -->
	<property name="defaultEncoding" value="utf-8" />
	<property name="javaMailProperties">
		<props>
			<prop key="mail.debug">true</prop>
			<prop key="mail.smtp.starttls.enable">true</prop>
			<prop key="mail.smtps.ssl.checkserveridentity">true</prop>
			<prop key="mail.smtp.auth">true</prop>
			<prop key="mail.smtps.ssl.trust">*</prop>
			<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
		</props>
	</property>
</bean>



<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="prefix" value="/WEB-INF/views/"></property>
	<property name="suffix" value=".jsp"></property>
</bean>

<mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>

<context:component-scan base-package="com.*"></context:component-scan><!-- repoistory,service, controller 생성 -->


</beans>
